<UserControl x:Class="Lib.Startup.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Behaviors="clr-namespace:Lib.Startup.Behaviors"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:PasswordBox="clr-namespace:Lib.Startup.AttachedProperties"
             xmlns:Converters="clr-namespace:Lib.Startup.Converters"
             xmlns:Enums="clr-namespace:Lib.Startup.Enums"
             mc:Ignorable="d" x:Name="this"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <BitmapImage x:Key="eSODIcon" UriSource="/Lib.Startup;component/eSOD.png"/>
            <BitmapImage x:Key="imgLogoKamsoft" UriSource="/Lib.Startup;component/logoKamsoft.png"/>
            <BitmapImage x:Key="imgLogo" UriSource="/Lib.Startup;component/eSODLogo.png"/>
            <BitmapImage x:Key="imgUIClose" UriSource="/Lib.Startup;component/uiClose.png"/>

            <SolidColorBrush x:Key="primaryUIBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="blueHeaderForegroundBrush" Color="#FF285C9E" />
            <SolidColorBrush x:Key="headerForegroundBrush" Color="White" />
            <SolidColorBrush x:Key="headerBackgroundBrush" Color="#FF285C9E" />
            <!--<SolidColorBrush x:Key="headerLogoBackgroundBrush" Color="#084490" />-->
            <!--<RadialGradientBrush x:Key="headerBackgroundBrush" GradientOrigin="0.3,0.6" Center="0.5,0.5" >
                <RadialGradientBrush.GradientStops>
                    <GradientStop Color="#FFBABABA" Offset="1.0" />
                    <GradientStop Color="#FFC9C9C9" Offset="0.5" />
                </RadialGradientBrush.GradientStops>
            </RadialGradientBrush>
            <RadialGradientBrush x:Key="headerLogoBackgroundBrush" GradientOrigin="0.3,0.6" Center="0.5,0.5" >
                <RadialGradientBrush.GradientStops>
                    <GradientStop Color="#FFABABAB" Offset="1.0" />
                    <GradientStop Color="#FFC9C9C9" Offset="0" />
                </RadialGradientBrush.GradientStops>
            </RadialGradientBrush>
            -->

            <RadialGradientBrush x:Key="headerLogoBackgroundBrush" GradientOrigin="0.3,0.6" Center="0.5,0.5" >
                <RadialGradientBrush.GradientStops>
                    <GradientStop Color="#084490" Offset="1.0" />
                    <GradientStop Color="#FF285C9E" Offset="0" />
                </RadialGradientBrush.GradientStops>
            </RadialGradientBrush>


            <SolidColorBrush x:Key="footerBackgroundBrush" Color="#FF285C9E"/>

            <Color x:Key="FrameColor">#FFCCCCCC</Color>
            <SolidColorBrush x:Key="FrameBrush" Color="{StaticResource FrameColor}"/>

            <SolidColorBrush x:Key="iconsBrush" Color="#222222"/> <!--#222222-->
            <SolidColorBrush x:Key="fieldsBrush" Color="White"/> <!--#DDDDDD-->
            <SolidColorBrush x:Key="fontsFooterBrush" Color="White"/>
            <SolidColorBrush x:Key="fontsBrush" Color="#808080"/>
            <SolidColorBrush x:Key="accentBrush" Color="#E48C02"/>
            <SolidColorBrush x:Key="buttonBackgroundBrush" Color="#FF285C9E" />
            <SolidColorBrush x:Key="buttonDisabledBackgroundBrush" Color="#FFF7F6F6" />

            <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#88e3e9ef"/>
            <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888"/>
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee"/>
            <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888"/>

            <VisualBrush x:Key="strippedBrush" TileMode="Tile" Viewport="0,0,30,30" 
                     ViewportUnits="Absolute" Viewbox="0,0,60,60"    
                     ViewboxUnits="Absolute">
                <VisualBrush.Visual>
                    <Canvas SnapsToDevicePixels="False" UseLayoutRounding="False">
                        <Rectangle Fill="#A0A0A0A0" Width="60" Height="60"/>
                        <Path Stroke="#05111111" StrokeThickness="20" Data="M 15, 75 l 60, -60" />
                        <Path Stroke="#05111111" StrokeThickness="20" Data="M -15, 45 l 60, -60" />
                    </Canvas>
                </VisualBrush.Visual>
            </VisualBrush>

            <Style x:Key="VerticalSeparatorStyle" TargetType="Rectangle">
                <Setter Property="Width" Value="3"/>
                <Setter Property="Margin" Value="0,0,10,0"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{StaticResource FrameColor}" Offset="1"/>
                            <GradientStop Color="#669B9B9B" Offset="0.3"/>
                            <GradientStop Color="#00FFFFFF" Offset="0.1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="EnvironmentTextBoxStyle" TargetType="TextBox">
                <Style.Resources>
                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None" >
                        <VisualBrush.Visual>
                            <TextBox Text="Środowisko" FontStyle="Italic" FontSize="14" Foreground="{StaticResource fontsBrush}" Background="Transparent" BorderBrush="Transparent"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Style.Resources>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Name="border" Height="30">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Text" Value="">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <Trigger Property="Text" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <!--<Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>-->
                </Style.Triggers>
            </Style>

            <Style x:Key="UserTextBoxStyle" TargetType="TextBox">
                <Style.Resources>
                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None" >
                        <VisualBrush.Visual>
                            <TextBox Text="Użytkownik" FontStyle="Italic" FontSize="14" Foreground="{StaticResource fontsBrush}" Background="Transparent" BorderBrush="Transparent"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Style.Resources>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Foreground" Value="Black"/>
                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Name="border" Height="30">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"/>
                            </Border>
                            <!--<ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#9E5971" />
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Text" Value="">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <Trigger Property="Text" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <!--<Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>-->
                </Style.Triggers>
            </Style>

            <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
                <Style.Resources>
                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None" >
                        <VisualBrush.Visual>
                            <TextBox Text="Hasło" FontStyle="Italic" FontSize="14" Foreground="{StaticResource fontsBrush}" Background="Transparent" BorderBrush="Transparent"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Style.Resources>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Name="border" Height="30">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{TemplateBinding Background}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="PasswordBox:PasswordHelper.Password" Value="">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <Trigger Property="PasswordBox:PasswordHelper.Password" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                    </Trigger>
                    <!--<Trigger Property="IsMouseCaptured" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>-->
                </Style.Triggers>
            </Style>

            <Style x:Key="NewPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource PasswordBoxStyle}">
                <Style.Resources>
                    <VisualBrush x:Key="CueBannerBrush2" AlignmentX="Left" AlignmentY="Center" Stretch="None" >
                        <VisualBrush.Visual>
                            <TextBox Text="Nowe hasło" FontStyle="Italic" FontSize="14" Foreground="{StaticResource fontsBrush}" Background="Transparent" BorderBrush="Transparent"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Style.Resources>
                <Style.Triggers>
                    <Trigger Property="PasswordBox:PasswordHelper.Password" Value="">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush2}" />
                    </Trigger>
                    <Trigger Property="PasswordBox:PasswordHelper.Password" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush2}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Validation.HasError" Value="True" />
                            <Condition Property="IsVisible" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DockPanel LastChildFill="True">
                                        <TextBlock DockPanel.Dock="Right" Foreground="Red" FontSize="12pt" Margin="0,0,0,0" FontWeight="Bold">*</TextBlock>
                                        <Border CornerRadius="0">
                                            <AdornedElementPlaceholder Visibility="Visible"  Name="controlWithError"/>
                                        </Border>
                                    </DockPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="RepeatNewPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource PasswordBoxStyle}">
                <Style.Resources>
                    <VisualBrush x:Key="CueBannerBrush2" AlignmentX="Left" AlignmentY="Center" Stretch="None" >
                        <VisualBrush.Visual>
                            <TextBox Text="Powtórz nowe hasło" FontStyle="Italic" FontSize="14" Foreground="{StaticResource fontsBrush}" Background="Transparent" BorderBrush="Transparent"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Style.Resources>
                <Style.Triggers>
                    <Trigger Property="PasswordBox:PasswordHelper.Password" Value="">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush2}" />
                    </Trigger>
                    <Trigger Property="PasswordBox:PasswordHelper.Password" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource CueBannerBrush2}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Validation.HasError" Value="True" />
                            <Condition Property="IsVisible" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <DockPanel LastChildFill="True">
                                        <TextBlock DockPanel.Dock="Right" Foreground="Red" FontSize="12pt" Margin="0,0,0,0" FontWeight="Bold">*</TextBlock>
                                        <Border CornerRadius="0">
                                            <AdornedElementPlaceholder Visibility="Visible"  Name="controlWithError"/>
                                        </Border>
                                    </DockPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                            CornerRadius="0" BorderThickness="1, 1, 1, 1" 
                            Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                            CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
                            Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Path Name="Arrow" Grid.Column="1" 
                         Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                         HorizontalAlignment="Center" Fill="#444"
                         VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                                              ClickMode="Press" Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                             Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                                <Border BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="Black"  Height="30">
                                    <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                                  HorizontalAlignment="Left" VerticalAlignment="Center"                         
                                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                </Border>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         Visibility="Hidden" Background="Transparent"
                                         HorizontalAlignment="Left" VerticalAlignment="Center"
                                         Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup Name="Popup" Placement="Bottom"
                                       Focusable="False" AllowsTransparency="True"
                                       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                          MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                                CornerRadius="0" BorderThickness="1,1,1,1" 
                                                BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>        
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding Path=EnterCommand}" />
    </UserControl.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- HeaderBar mieszczący się na 130 punktach wysokości -->
        <!--<Grid Grid.Row="0" Background="{StaticResource headerBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>-->
            <!-- Tło headera -->
            <!--<Border Grid.RowSpan="4" Background="{StaticResource strippedBrush}" Opacity="1">
                <Border.OpacityMask>
                    <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                        <GradientStop Offset="0" Color="Black"/>
                        <GradientStop Offset="1" Color="Transparent"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>-->            
            
            <!-- Logo Kamsoft -->
            <!--<Image HorizontalAlignment="Left" Height="25" Margin="15,0,0,5"  Source="{StaticResource imgLogoKamsoft}"/>-->

        <Grid Grid.Row="0" Background="{StaticResource headerBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!-- Logo aplikacji Source="{StaticResource imgLogo}" -->
            <Grid Grid.Column="0" Width="180" Background="{StaticResource headerLogoBackgroundBrush}">
                <Image   HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Source="{Binding Image}" MaxHeight="120"
                        Margin="40,15,0,15"/>
                <TextBlock FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="White" Text="Us" FontWeight="Light"/>
            </Grid>
            <!-- Miejsce na nazwę aplikacji -->
            <TextBlock Grid.Column="1" Text="{Binding AppName}" Foreground="{StaticResource headerForegroundBrush}"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                           FontSize="30"  TextWrapping="WrapWithOverflow" Margin="30,20,30,30" />

        </Grid>
        <!--<Rectangle Grid.Row="3" Fill="#66FFFFFF" Height="2" HorizontalAlignment="Stretch"/>-->
        <!--</Grid>-->

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>

            <!--<Border Grid.Row="1" BorderBrush="#50000000" BorderThickness="0,1,0,0" Margin="0,0,0,0" Grid.RowSpan="2" />-->
            <!-- Grid z polami na dane -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Nagłówek aktualnie wykonywanej operacji -->
                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Width="180" BorderBrush="{StaticResource headerBackgroundBrush}" BorderThickness="0,0,0,2" HorizontalAlignment="Left">
                    <TextBlock Margin="0,5" Foreground="{StaticResource fontsBrush}" FontSize="20"
                           HorizontalAlignment="Center" Focusable="False">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="Logowanie"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChangingPasswordPanelVisible}" Value="True">
                                    <Setter Property="Text" Value="Zmiana hasła"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    </TextBlock>
                </Border>
                
                <!-- Podstawowe pola - środowisko, login, hasło -->
                <Grid Grid.Row="1" Margin="40,20,20,0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Margin="0,0,0,0" Visibility="{Binding ShowContexts, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource fieldsBrush}"/>

                        <Path Grid.Column="0" Stretch="Uniform" Width="20" Height="20" Margin="5,0" ToolTip="Środowisko"
                              Fill="{StaticResource iconsBrush}" Data="M20.167,0 L35.334,0 35.334,15.166 29.9375,15.166 29.9375,22.4375 49.61,22.4375 49.625,22.4375 49.625,35.5 55.500999,35.5 55.500999,50.666001 40.333999,50.666001 40.333999,35.5 45.375,35.5 45.375,26.333001 29.9375,26.333001 29.9375,35.5 35.334,35.5 35.334,50.666001 20.167,50.666001 20.167,35.5 25.875,35.5 25.875,26.333001 10.416,26.333001 10.416,35.5&#xD;&#xA;15.167,35.5 15.167,50.666001 -2.4018917E-14,50.666001 -2.4018917E-14,35.5 6.243,35.5 6.243,22.4375 6.2499999,22.4375 25.875,22.4375 25.875,15.166 20.167,15.166 z"/>
                        <TextBlock Name="EnvironmentInfo" Grid.Column="1" Margin="5,0" Text="Środowisko"  HorizontalAlignment="Left"
                                   FontStyle="Italic" FontSize="14" Foreground="#888888" Background="Transparent" Visibility="{Binding IsContextNotSet, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}"/>
                        <ComboBox x:Name="cbEnvironment" Grid.Column="1" Margin="0,2" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          ItemsSource="{Binding Contexts}" Visibility="{Binding UseProvidedContexts, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}"
                          SelectedItem="{Binding SelectedContext}" Style="{StaticResource ComboBoxFlatStyle}">
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding Path=EnterCommand}" />
                            </ComboBox.InputBindings>
                        </ComboBox>
                        <TextBox Grid.Column="1" Margin="0,5" Text="{Binding SelectedContext, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource EnvironmentTextBoxStyle}"
                             Visibility="{Binding UseProvidedContexts, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}, ConverterParameter=INVERT}"/>
                    </Grid>

                    <Grid Grid.Row="1" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource fieldsBrush}"/>

                        <Path Grid.Column="0" Stretch="Uniform" Width="20" Height="20" Margin="5,0" ToolTip="Użytkownik DBAP"
                              Fill="{StaticResource iconsBrush}" Data="F1 M 38,19C 43.5417,19 45.9167,22.1667 45.1174,28.8134C 45.8315,29.2229 46.3125,29.9928 46.3125,30.875C 46.3125,31.9545 45.5923,32.8658 44.6061,33.1546C 44.1941,34.623 43.5543,35.9229 42.75,36.9628L 42.75,41.9583C 45.3889,42.4861 47.5,42.75 50.6667,44.3333C 53.8333,45.9167 54.8889,47.3681 57,49.4792L 57,57L 19,57L 19,49.4792C 21.1111,47.3681 22.1667,45.9167 25.3333,44.3333C 28.5,42.75 30.6111,42.4861 33.25,41.9583L 33.25,36.9628C 32.4457,35.9229 31.8059,34.623 31.3939,33.1546C 30.4077,32.8658 29.6875,31.9545 29.6875,30.875C 29.6875,29.9928 30.1685,29.2229 30.8826,28.8134C 30.0833,22.1667 32.4583,19 38,19 Z"/>
                        <TextBox Grid.Column="1" Margin="0,5" Text="{Binding UserName, UpdateSourceTrigger=PropertyChanged}" CharacterCasing="Upper"
                                 Style="{StaticResource UserTextBoxStyle}"/>
                    </Grid>

                    <Grid Grid.Row="2" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource fieldsBrush}"/>

                        <Path Grid.Column="0" Stretch="Uniform" Width="20" Height="20" Margin="5,0" ToolTip="Hasło"
                              Fill="{StaticResource iconsBrush}" Data="F1 M 30.0833,20.5833C 36.2045,20.5833 41.1667,25.5455 41.1667,31.6667C 41.1667,32.9121 40.9612,34.1096 40.5824,35.2271L 41.2098,35.6999L 42.75,38.3958L 45.9562,37.294L 45.0696,43.0703L 50.0614,42.37L 49.8929,47.9923L 55.4166,45.125L 56.941,46.6616L 58.5833,54.7394L 51.9312,55.6743L 33.8897,42.0791C 32.7027,42.5131 31.4207,42.75 30.0833,42.75C 23.9622,42.75 19,37.7878 19,31.6667C 19,25.5455 23.9622,20.5833 30.0833,20.5833 Z M 26.9167,26.125C 25.605,26.125 24.5417,27.1883 24.5417,28.5C 24.5417,29.8117 25.605,30.875 26.9167,30.875C 28.2283,30.875 29.2917,29.8117 29.2917,28.5C 29.2917,27.1883 28.2283,26.125 26.9167,26.125 Z"/>
                        <PasswordBox Grid.Column="1" Margin="0,5" PasswordBox:PasswordHelper.Attach="true" VerticalAlignment="Stretch"
                                     PasswordBox:PasswordHelper.Password="{Binding Password, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Style="{StaticResource PasswordBoxStyle}"/>
                    </Grid>

                </Grid>

                <!-- Obsługa zmiany hasła -->
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Pola do zmiany hasła - nowe hasło, powtórka hasła -->
                    <Border Visibility="{Binding IsChangingPasswordPanelVisible, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}" Height="0" Margin="40,0,0,0">
                        <i:Interaction.Behaviors>
                            <Behaviors:VisibilityAnimationBehavior TargetHeight="100" InitialState="Collapsed" AnimatingHeight="True"/>
                        </i:Interaction.Behaviors>

                        <Grid Margin="0,0,20,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource fieldsBrush}"/>

                                <Path Grid.Column="0" Stretch="Uniform" Width="20" Height="20" Margin="5,0"
                                      Fill="{StaticResource iconsBrush}" Data="F1 M 44.4832,15.8147L 38.0245,32.9939L 37.8017,32.9939L 31.6771,15.8147L 21.7662,21.578L 33.4588,35.6539L 33.4588,35.8755L 16.087,32.3289L 16.087,43.523L 33.5702,40.4197L 33.6815,40.6414L 21.7662,54.4955L 31.343,60.148L 37.6904,43.0797L 37.9131,43.0797L 44.3718,60.148L 54.1713,54.4955L 42.1447,40.7522L 42.1447,40.5305L 60.0713,43.523L 60.0713,32.3289L 42.256,35.8755L 42.256,35.6539L 54.1713,21.4672L 44.4832,15.8147 Z"/>
                                <PasswordBox x:Name="pbNewPass" Grid.Column="1" Margin="0,5" PasswordBox:PasswordHelper.Attach="true" VerticalAlignment="Stretch"
                                     PasswordBox:PasswordHelper.Password="{Binding NewPassword, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Style="{StaticResource NewPasswordBoxStyle}"/>
                            </Grid>

                            <Grid Grid.Row="1" Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Row="0" Grid.ColumnSpan="2" Background="{StaticResource fieldsBrush}"/>

                                <Path Grid.Column="0" Stretch="Uniform" Width="20" Height="20" Margin="5,0"
                                      Fill="{StaticResource iconsBrush}" Data="F1 M 23.7501,33.25L 34.8334,44.3333L 52.2499,22.1668L 56.9999,26.9168L 34.8334,53.8333L 19.0001,38L 23.7501,33.25 Z"/>
                                <PasswordBox Grid.Column="1" Margin="0,5" PasswordBox:PasswordHelper.Attach="true" VerticalAlignment="Stretch"
                                     PasswordBox:PasswordHelper.Password="{Binding NewPasswordRepeat, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                                     Style="{StaticResource RepeatNewPasswordBoxStyle}"/>
                            </Grid>

                            <Grid Grid.Row="2" Margin="0,0,0,0">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding PasswordStrength}" Value="{x:Static Enums:NewPasswordStrengthEnum.NotDefined}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Foreground="{StaticResource fontsBrush}" FontSize="14" Text="Moc hasła:" FontWeight="Light" Focusable="False" VerticalAlignment="Center"/>
                                <Rectangle Grid.Column="1" Margin="5,5,0,5" Fill="#AAFF0000" ToolTip="Słabe" >
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PasswordStrength}" Value="{x:Static Enums:NewPasswordStrengthEnum.NotDefined}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>

                                <Rectangle Grid.Column="2" Margin="2,5,0,5" Fill="#AAFF6A00" ToolTip="Średnie" >
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PasswordStrength}" Value="{x:Static Enums:NewPasswordStrengthEnum.Weak}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>

                                <Rectangle Grid.Column="3" Margin="2,5,0,5" Fill="#AA267F00" ToolTip="Mocne">
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PasswordStrength}" Value="{x:Static Enums:NewPasswordStrengthEnum.Medium}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PasswordStrength}" Value="{x:Static Enums:NewPasswordStrengthEnum.Weak}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                            </Grid>
                        </Grid>
                    </Border>

                    <!-- Przycisk Zmień hasło-->
                    <Button Grid.Row="1" Margin="40,0,0,5" HorizontalAlignment="Left" Command="{Binding ShowPanelForChangingPasswordCommand}"
                            Cursor="Hand" Focusable="False" Visibility="{Binding CanChangePassword, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <TextBlock Name="Text" Text="Zmień hasło" FontSize="14" Foreground="{StaticResource fontsBrush}"/>

                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsChangingPasswordPanelVisible}" Value="True">
                                        <Setter TargetName="Text" Property="Text" Value="Powrót"/>
                                    </DataTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="TextDecorations" TargetName="Text" Value="Underline"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" TargetName="Text" Value="{StaticResource headerForegroundBrush}"/>
                                        <Setter Property="TextDecorations" TargetName="Text" Value="Underline"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>

                <!-- Przycisk logowania -->
                <Border Grid.Row="1" Grid.Column="1" Margin="10,20,0,0">
                    <i:Interaction.Behaviors>
                        <Behaviors:VisibilityAnimationBehavior HiddenState="Hidden"/>
                    </i:Interaction.Behaviors>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChangingPasswordPanelVisible}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PasswordExpires}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button x:Name="btnLogIn"  
                        Width="160" VerticalAlignment="Bottom"
                        ToolTip="Zaloguj" IsDefault="True"
                        Cursor="Hand" Command="{Binding LoginCommand}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid Background="Transparent">
                                    <Rectangle Name="ButtonBg"
                                           Height="35" Width="{TemplateBinding ActualWidth}"
                                           Fill="{StaticResource buttonBackgroundBrush}"/>

                                    <!--<Path Name="WhiteArrow" Stretch="Uniform" Fill="White" Margin="20"
                                      Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z"/>-->
                                    <TextBlock Name="textBlock" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold"
                                               Text="Zaloguj" Foreground="White" TextWrapping="WrapWithOverflow"/>

                                    <Rectangle Name="Highlight" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
                                           Opacity="0.1" Visibility="Collapsed" Fill="White"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <!--<Setter Property="Opacity" TargetName="WhiteArrow" Value="0.5"/>-->
                                        <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource fontsBrush}"/>
                                        <Setter Property="Fill" TargetName="ButtonBg" Value="{StaticResource buttonDisabledBackgroundBrush}"/>
                                        <Setter Property="Opacity" TargetName="textBlock" Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
                                        <Setter Property="Fill" TargetName="Highlight" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Border>

                <Border Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="10,0,0,2">
                    <i:Interaction.Behaviors>
                        <Behaviors:VisibilityAnimationBehavior TargetHeight="35" AnimatingHeight="True"/>
                    </i:Interaction.Behaviors>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChangingPasswordPanelVisible}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <Button x:Name="btnChangePswd"  VerticalAlignment="Stretch"
                            Width="{Binding ActualWidth, ElementName=btnLogIn}"
                            Cursor="Hand" Command="{Binding ChangePasswordCommand}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid Background="Transparent">
                                    <Rectangle Name="ButtonBg"
                                           Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
                                           Fill="{StaticResource buttonBackgroundBrush}"/>

                                    <TextBlock  Name="textBlock2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold"
                                               Text="Zmień hasło" Foreground="White" TextWrapping="WrapWithOverflow"/>

                                    <Rectangle Name="Highlight" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
                                           Opacity="0.1" Visibility="Collapsed" Fill="White"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsChangingPasswordPanelVisible}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <!--<Setter Property="Fill" TargetName="ButtonBg" Value="Gray"/>-->
                                        <Setter Property="Foreground" TargetName="textBlock2" Value="{StaticResource fontsBrush}"/>
                                        <Setter Property="Fill" TargetName="ButtonBg" Value="{StaticResource buttonDisabledBackgroundBrush}"/>
                                        <Setter Property="Opacity" TargetName="textBlock2" Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
                                        <Setter Property="Fill" TargetName="Highlight" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Border>
            </Grid>

            <Grid Grid.Row="2" Margin="40,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Informacja o błędzie -->
                <StackPanel Orientation="Horizontal" Visibility="{Binding HasError, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Path Margin="1,0,5,0" Fill="Red" Height="20" Width="20" Stretch="Uniform" VerticalAlignment="Center"
                              Data="F1 M 58.5832,55.4172L 17.4169,55.4171C 15.5619,53.5621 15.5619,50.5546 17.4168,48.6996L 35.201,15.8402C 37.056,13.9852 40.0635,13.9852
                                                   41.9185,15.8402L 58.5832,48.6997C 60.4382,50.5546 60.4382,53.5622 58.5832,55.4172 Z M 34.0417,25.7292L 36.0208,41.9584L 39.9791,41.9583L
                                                   41.9583,25.7292L 34.0417,25.7292 Z M 38,44.3333C 36.2511,44.3333 34.8333,45.7511 34.8333,47.5C 34.8333,49.2489 36.2511,50.6667 38,50.6667C
                                                   39.7489,50.6667 41.1666,49.2489 41.1666,47.5C 41.1666,45.7511 39.7489,44.3333 38,44.3333 Z"/>
                    <ScrollViewer VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                              VerticalScrollBarVisibility="Auto" MaxHeight="50" Grid.Column="0">

                        <TextBox TextWrapping="Wrap" Foreground="Red" Text="{Binding Error}" ToolTip="{Binding Error}" HorizontalAlignment="Left" Width="350"
                         IsReadOnly="True" BorderBrush="Transparent" Background="Transparent">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                    </ScrollViewer>
                </StackPanel>

                <!-- Informacja o ostrzeżeniu -->
                <StackPanel Orientation="Horizontal" Visibility="{Binding HasWarning, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Path Margin="1,0,5,0" Fill="{StaticResource accentBrush}" Height="20" Width="20" Stretch="Uniform" VerticalAlignment="Center"
                              Data="F1 M 58.5832,55.4172L 17.4169,55.4171C 15.5619,53.5621 15.5619,50.5546 17.4168,48.6996L 35.201,15.8402C 37.056,13.9852 40.0635,13.9852
                                                   41.9185,15.8402L 58.5832,48.6997C 60.4382,50.5546 60.4382,53.5622 58.5832,55.4172 Z M 34.0417,25.7292L 36.0208,41.9584L 39.9791,41.9583L
                                                   41.9583,25.7292L 34.0417,25.7292 Z M 38,44.3333C 36.2511,44.3333 34.8333,45.7511 34.8333,47.5C 34.8333,49.2489 36.2511,50.6667 38,50.6667C
                                                   39.7489,50.6667 41.1666,49.2489 41.1666,47.5C 41.1666,45.7511 39.7489,44.3333 38,44.3333 Z"/>
                    <ScrollViewer VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                              VerticalScrollBarVisibility="Auto" MaxHeight="50" Grid.Column="0">
                        <TextBox TextWrapping="Wrap" Foreground="Orange" Text="{Binding Warning}" ToolTip="{Binding Warning}" HorizontalAlignment="Left" Width="350"
                             IsReadOnly="True" BorderBrush="Transparent" Background="Transparent" Focusable="False">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>

                        <!--<TextBlock Text="{Binding DaysToPasswordExpiration, StringFormat='{}UWAGA: Twoje hasło wygaśnie za {0} dni!'}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center"
                                   Foreground="{StaticResource accentBrush}"/>-->

                    </ScrollViewer>
                </StackPanel>

                <Button x:Name="btnLogIn2" Grid.Column="1" Margin="20,0,0,0" Visibility="{Binding PasswordExpires, Converter={x:Static Converters:BoolToVisibilityConverter.Instance}}"
                        Width="{Binding ActualWidth, ElementName=btnLogIn}" Height="25"
                        Cursor="Hand" Command="{Binding LoginCommand}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent">
                                <Rectangle Name="ButtonBg"
                                        Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
                                        Fill="{StaticResource accentBrush}"/>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                            Text="Zaloguj mimo to" Foreground="Black" FontSize="15"/>
                                <Rectangle Name="Highlight" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
                                        Opacity="0.1" Visibility="Collapsed" Fill="White"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="ButtonBg" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Visibility" TargetName="Highlight" Value="Visible"/>
                                    <Setter Property="Fill" TargetName="Highlight" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>

            <Grid Grid.Row="3" Background="{StaticResource footerBackgroundBrush}">
                
                <!--<Image HorizontalAlignment="Left" Height="16" Margin="15,3,0,0"  Source="{StaticResource imgLogoKamsoft}"/>-->
                <TextBlock Text="KAMSOFT" Foreground="White" FontSize="20" FontWeight="Bold" Margin="10,0,20,3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Margin="5,5,0,5" VerticalAlignment="Center" Foreground="{StaticResource fontsFooterBrush}" FontWeight="Bold"
                           Text="{Binding AppCode}" FontFamily="Calibri" FontSize="15"/>
                    <TextBlock Margin="5" VerticalAlignment="Center" Foreground="{StaticResource fontsFooterBrush}" FontWeight="Bold"
                           Text="{Binding AppVersion, StringFormat=' {0}'}" FontFamily="Calibri" FontSize="15"/>
                </StackPanel>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
